<!DOCTYPE html>
<html>

<head>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Flood warning</title>
  <script src="/socket.io/socket.io.js"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/jquery.knob/1.2.13/jquery.knob.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
  <style>
    .dial-container {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      border: 2px solid black;
      padding: 10px;
      margin-bottom: 5px;
    }

    .dial {
      border-radius: 0;
    }

    .chart-container {
      width: 100%;
      height: 200px;
    }

    #map {
      border: 2px solid black;
    }
  </style>
</head>

<body>
  {{> menu}}
  <div class="container">
    <br></br>
    <div class="row">
      <div class="col-12 col-lg-6 col-xl-6">
        <div id="map" style="width: 100%; height: 450px;"></div>
      </div>
      <div class="col-12 col-lg-6 col-xl-6">
        <div class="row ">
          <div class="col-6 col-lg-6 col-xl-5">
            <div class="dial-container">
              <input id="distance" type="text" class="dial" data-min="0" data-max="200" data-width="130"
                data-height="150" data-thickness=".2" data-fgColor="#66CC66" data-displayPrevious=true readonly>
              <p class="text-center"><label>Khoảng cách (cm)</label></p>
            </div>
          </div>
          <div class="col-6 col-lg-6 col-xl-5">
            <div class="dial-container">
              <input id="average" type="text" class="dial" data-min="0" data-max="200" data-width="130"
                data-height="150" data-thickness=".2" data-fgColor="#FF6699" data-displayPrevious=true readonly>
              <p class="text-center"><label>Trung bình</label></p>
            </div>
          </div>
        </div>
        <div class="row ">
          <div class="col-6 col-lg-6 col-xl-5">
            <div class="dial-container">
              <input id="temperature" type="text" class="dial" data-min="0" data-max="100" data-width="130"
                data-height="150" data-height="200" data-thickness=".2" data-fgColor="#FFCC33" data-displayPrevious=true
                readonly>
              <p class="text-center"><label>Nhiệt độ (°C)</label></p>
            </div>
          </div>
          <div class="col-6 col-lg-6 col-xl-5">
            <div class="dial-container">
              <input id="humidity" type="text" class="dial" data-min="0" data-max="100" data-width="130"
                data-height="150" data-thickness=".2" data-fgColor="#3399FF" data-displayPrevious=true readonly>
              <p class="text-center"><label>Độ ẩm (%)</label></p>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-12 col-lg-12 col-xl-12">
        <canvas id="distanceChart" class="chart-container"></canvas>
      </div>
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBQNKBlrMu1cxcil_xD7MnsbaVl5yfj5tY&callback=initMap"> </script>
  <script>
    $(function () {
      $(".dial").knob({
        'readOnly': true // Set readOnly option to true
      });
    });
    const socket = io();
    socket.on('data', (data) => {
      $('#distance').val(data.distance).trigger('change');
      $('#temperature').val(data.temperature).trigger('change');
      $('#humidity').val(data.humidity).trigger('change');
      $('#average').val(data.average).trigger('change');
      $('#warning').text(data.warning);
    });
    function initMap() {
      // Tạo một đối tượng map mới
      var myLatLng = { lat: 10.388677, lng: 105.423072 };
      var map = new google.maps.Map(document.getElementById('map'), {
        zoom: 14,
        center: myLatLng
      });

      var marker = new google.maps.Marker({
        position: myLatLng,
        map: map,
        title: 'Khu vực 1'
      });
      // Khởi tạo marker cho khu vực 2
      var marker2 = new google.maps.Marker({
        position: { lat: 10.384925, lng: 105.439820 },
        map: map,
        title: 'Khu vực 2'
      });
      var currentInfowindow = null;

      // Thêm một sự kiện click vào marker để hiển thị các giá trị trong socket
      marker.addListener("click", () => {
        if (currentInfowindow) {
          currentInfowindow.close();
        }

        const infowindow = new google.maps.InfoWindow({
          content: `
        <div>
          <p>Khu vực 1: Cầu Tôn Đức Thắng</p>
          <p>Distance: <span id="mapdistance"></span></p>
          <p>Temperature: <span id="maptemperature"></span></p>
          <p>Humidity: <span id="maphumidity"></span></p>
          <p>Average: <span id="mapaverage"></span></p>
          <p>Warning: <span id="mapwarning"></span></p>
          <p><a href="/">Xem</a></p>
        </div>
      `,
        });

        // Mở thông báo
        infowindow.open({
          anchor: marker,
          map,
          shouldFocus: false,
        });

        currentInfowindow = infowindow;

        // Cập nhật các giá trị trong socket vào thông báo
        const socket = io();
        socket.on("data", (data) => {
          $("#mapdistance").text(data.distance);
          $("#maptemperature").text(data.temperature);
          $("#maphumidity").text(data.humidity);
          $("#mapaverage").text(data.average);
          $("#mapwarning").text(data.warning);
        });
      });
      marker2.addListener("click", () => {
  if (currentInfowindow) {
    currentInfowindow.close();
  }

  const infowindow = new google.maps.InfoWindow({
    content: `
      <div>
        <p>Khu vực 2: Cầu Duy Tân</p>
        <p>Distance: <span id="mapdistance2"></span></p>
        <p>Temperature: <span id="maptemperature2"></span></p>
        <p>Humidity: <span id="maphumidity2"></span></p>
        <p>Average: <span id="mapaverage2"></span></p>
        <p>Warning: <span id="mapwarning2"></span></p>
        <p><a href="/home2">Xem</a></p>
      </div>
    `,
  });

  // Mở thông báo
  infowindow.open({
    anchor: marker2,
    map,
    shouldFocus: false,
  });

  currentInfowindow = infowindow;

  // Cập nhật các giá trị trong socket vào thông báo
  const socket = io();
  socket.on("data", (data) => {
    $("#mapdistance2").text(data.distance);
    $("#maptemperature2").text(data.temperature);
    $("#maphumidity2").text(data.humidity);
    $("#mapaverage2").text(data.average);
    $("#mapwarning2").text(data.warning);
  });
});

    }

    const distanceCtx = document.getElementById('distanceChart').getContext('2d');
    const distanceChart = new Chart(distanceCtx, {
      type: 'line',
      data: {
        labels: [],
        datasets: [{
          label: 'Khoang Cach (m)',
          data: [],
          borderColor: 'Brown',
          fill: false
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false
      }
    });
    socket.on('data', (data) => {
      // Add new data to the charts
      distanceChart.data.labels.push('');
      distanceChart.data.datasets[0].data.push(data.distance);
      distanceChart.update();
    });
  </script>
</body>

</html>
