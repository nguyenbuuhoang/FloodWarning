<!DOCTYPE html>
<html>

<head>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Flood warning</title>
  <script src="/socket.io/socket.io.js"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/jquery.knob/1.2.13/jquery.knob.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
  <style>
    .dial-container {
      display: inline-block;
      margin-bottom: 25px;
    }

    .chart-container {
      width: 100%;
      height: 200px;
    }

    .dial {
      width: 100%;
      height: 100%;
    }
  </style>
</head>

<body>
  {{> menu}}
  <div class="container-fluid">
    <h1 class="text-center my-5">HỆ THỐNG CẢNH BÁO LŨ</h1>
    <div class="row">
      <div class="col-6 col-lg-6 col-xl-2">
        <div class="dial-container">
          <input id="distance" type="text" class="dial" data-min="0" data-max="200" data-thickness=".2"  data-width="170" data-height="170"
            data-fgColor="#66CC66" data-displayPrevious=true readonly>
          <p class="text-center"><label>Khoảng cách (cm)</label></p>
        </div>
      </div>
      <div class="col-6 col-lg-6 col-xl-2">
        <div class="dial-container">
          <input id="average" type="text" class="dial" data-min="0" data-max="200" data-thickness=".2" data-width="170" data-height="170"
            data-fgColor="#FF6699" data-displayPrevious=true readonly>
          <p class="text-center"><label>Trung bình</label></p>
        </div>
      </div>
      <div class="col-12 col-lg-6 col-xl-5">
        <canvas id="distanceChart" class="chart-container"></canvas>
      </div>
    </div>
    <div class="row">
      <div class="col-6 col-lg-6 col-xl-2">
        <div class="dial-container">
          <input id="temperature" type="text" class="dial" data-min="0" data-max="100" data-thickness=".2" data-width="170" data-height="170"
            data-fgColor="#FFCC33" data-displayPrevious=true readonly>
          <p class="text-center"><label>Nhiệt độ (°C)</label></p>
        </div>
      </div>
      <div class="col-6 col-lg-6 col-xl-2">
        <div class="dial-container">
          <input id="humidity" type="text" class="dial" data-min="0" data-max="100" data-thickness=".2" data-width="170" data-height="170"
            data-fgColor="#3399FF" data-displayPrevious=true readonly>
          <p class="text-center"><label>Độ ẩm (%)</label></p>
        </div>
      </div>
      <div class="col-12 col-lg-6 col-xl-5">
        <canvas id="temperatureChart" class="chart-container"></canvas>
      </div>
    </div>
    <div class="row">
      <div class="col">
        <h2 class="text-center">Warning: <span id="warning"></span></h2>
      </div>
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    $(function () {
      $(".dial").knob({
        'readOnly': true // Set readOnly option to true
      });
    });
    const socket = io();
    socket.on('data', (data) => {
      $('#distance').val(data.distance).trigger('change');
      $('#temperature').val(data.temperature).trigger('change');
      $('#humidity').val(data.humidity).trigger('change');
      $('#average').val(data.average).trigger('change');
      $('#warning').text(data.warning);
    });
    // Add a click event listener to the reset button that sends a message to the server to reset the data
    $('#reset-button').on('click', () => {
      socket.emit('reset');
    });
    const temperatureCtx = document.getElementById('temperatureChart').getContext('2d');
    const distanceCtx = document.getElementById('distanceChart').getContext('2d');
    const temperatureChart = new Chart(temperatureCtx, {
      type: 'line',
      data: {
        labels: [],
        datasets: [{
          label: 'Nhiệt độ (°C)',
          data: [],
          borderColor: 'red',
          fill: false
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false
      }
    });
    const distanceChart = new Chart(distanceCtx, {
      type: 'line',
      data: {
        labels: [],
        datasets: [{
          label: 'Khoang Cach (m)',
          data: [],
          borderColor: 'Brown',
          fill: false
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false
      }
    });
    socket.on('data', (data) => {
      // Add new data to the charts
      temperatureChart.data.labels.push('');
      temperatureChart.data.datasets[0].data.push(data.temperature);
      temperatureChart.update();

      distanceChart.data.labels.push('');
      distanceChart.data.datasets[0].data.push(data.distance);
      distanceChart.update();
    });
  </script>
</body>

</html>
